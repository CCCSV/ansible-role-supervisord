---
# {% set directories_to_create = [] %}
# {%- for var in [
#   "supervisord_directory",
#   "supervisord_conf_file"
# ]: -%}
#   {%- if value = locals().get(var): -%}
#     {%- do directories_to_create.append(value) -%}
#   {%- endif -%}
# {%- endfor -%}

# -------------------------------------------------------
# Install python tools
- name: install python setuptools for supervisord
  become: true
  action:  "{{ ansible_pkg_mgr }} name=python-setuptools state=present"
  tags:
    - install
    - supervisord

# -------------------------------------------------------
# Use easy_install to install the software as it's the
# recommended way:  http://supervisord.org/installing.html
#
- name: easy_install supervisor
  become: true
  command:  easy_install supervisor
  tags:
    - install
    - supervisord


# -------------------------------------------------------
# Make appropriate directories for configs, logs, and initialization
#
- name: create supervisord directories
  become: true
  file: dest="{{ item }}" state=directory follow=yes
  with_items: "{{ supervisor_directories | unique }}"

- name: create config directories
  become: true
  file: dest="{{ item | dirname }}" state=directory follow=yes
  with_items: "{{ supervisord_include_files | unique }}"


# -------------------------------------------------------
# Install supervisord configuration file
#

- name: install supervisord configuration file
  become: true
  template:
    src: etc_supervisord.conf
    dest: "{{ supervisord_conf_file }}"
  tags:
    - install
    - supervisord


# -------------------------------------------------------
# Install appropriate operating system run script
#

- name: install supervisord initialization script
  become: true
  template:
    src: "{{ item }}"
    dest: "{{ supervisord_init_file }}"
    mode: 0755
  with_first_found:
    - files:
        - "init.d/{{ ansible_os_family }}"
  tags:
    - install
    - supervisord


# -------------------------------------------------------
# Make sure service runs on reboot
#

- name: enable supervisord to start on boot
  become: true
  service:
    name: "{{ supervisord_service_name }}"
    enabled: yes
    use: service
  tags:
    - install
    - supervisord


# -------------------------------------------------------
# Make sure the service is not running right now before
# we start it up.

- name: make sure supervisord isn't running.
  become: true
  service:
    name: "{{ supervisord_service_name }}"
    state: stopped
    use: service
  tags:
    - install
    - supervisord


# -------------------------------------------------------
# Install supervisord program configuration files
#

- name: install supervisord program configuration files
  become: true
  template:
    src: etc_supervisord.d_program.conf
    dest: "{{ supervisord_conf_program_dir }}/{{ item.program }}.conf"
  with_items: "{{ supervisord_program_configs }}"
  notify:
    - supervisorctl update
  tags:
    - install
    - supervisord

- name: to run supervisor
  debug:
    msg: "{{ supervisord_should_run | default(supervisord_run_service_default) }}"


- name: waiting to make sure monitoring port is closed
  wait_for:
      host: 0.0.0.0
      port: 9001
      state: stopped
      timeout: 30

- name: start supervisord
  become: true
  service:
    name: "{{ supervisord_service_name }}"
    state: started
    pattern: "/usr/bin/python {{supervisord_program_path}}/supervisord"
    use: service
  when: supervisord_should_run | default(supervisord_run_service_default)
  tags:
    - install
    - supervisord
