[program:{{ item.program }}]
{% for param in [
  ['command', 'the program (relative uses PATH, can take args)'],
  ['process_name', 'process_name expr (default %(program_name)s)'],
  ['numprocs', 'number of processes copies to start (def 1)'],
  ['directory', 'directory to cwd to before exec (def no cwd)'],
  ['umask', 'umask for process (default None)'],
  ['priority', 'the relative start priority (default 999)'],
  ['autostart', 'start at supervisord start (default: true)'],
  ['autorestart', 'whether/when to restart (default: unexpected)'],
  ['startsecs', 'number of secs prog must stay running (def. 1)'],
  ['startretries', 'max # of serial start failures (default 3)'],
  ['exitcodes', '"expected" exit codes for process (default 0,2)'],
  ['stopsignal', 'signal used to kill process (default TERM)'],
  ['stopwaitsecs', 'max num secs to wait b4 SIGKILL (default 10)'],
  ['stopasgroup', 'send stop signal to the UNIX process group (default false)'],
  ['killasgroup', 'SIGKILL the UNIX process group (def false)'],
  ['user', 'setuid to this UNIX account to run the program'],

  ['redirect_stderr', 'redirect proc stderr to stdout (default false)'],
  ['stdout_logfile', 'stdout log path, NONE for none# default AUTO'],
  ['stdout_logfile_maxbytes', 'max # logfile bytes b4 rotation (default 50MB)'],
  ['stdout_logfile_backups', '# of stdout logfile backups (default 10)'],
  ['stdout_capture_maxbytes', 'number of bytes in \'capturemode\' (default 0)'],
  ['stdout_events_enabled', 'emit events on stdout writes (default false)'],

  ['stderr_logfile', 'stderr log path, NONE for none# default AUTO'],
  ['stderr_logfile_maxbytes', 'max # logfile bytes b4 rotation (default 50MB)'],
  ['stderr_logfile_backups', '# of stderr logfile backups (default 10)'],
  ['stderr_capture_maxbytes', 'number of bytes in \'capturemode\' (default 0)'],
  ['stderr_events_enabled', 'emit events on stderr writes (default false)'],

  ['environment', 'process environment additions (def no adds)'],
  ['serverurl', 'override serverurl computation (childutils)'],
] -%}
{%  if item.get(param[0]) -%}
{{ param[0] }}={{ item.get(param[0]) }}   #{{ param[1] }}
{%  endif -%}
{% endfor -%}
