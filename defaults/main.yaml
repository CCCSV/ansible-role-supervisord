---
##############################################################################
#
# General program configurations
#

supervisord_program_name: supervisord
supervisord_ctlprogram_name: supervisorctl
supervisord_conf_file: /etc/supervisord.conf
supervisord_conf_program_dir: /etc/supervisord.d
supervisord_service_name: supervisord
supervisord_init_file: "/etc/init.d/{{ supervisord_service_name }}"


##############################################################################
#
# Configurations for the supervisord.conf file, based off the auto generated
# supervisord configuration file via: echo_supervisord_conf > supervisord.conf
#
#

#[unix_http_server]
supervisord_unix_file: /tmp/supervisor.sock  # (the path to the socket file)
supervisord_unix_chmod: 0700                 # socket file mode (default 0700)
supervisord_unix_chown: "nobody:nogroup"     # socket file uid:gid owner
supervisord_unix_username: user              # (default is no username (open server))
supervisord_unix_password: 123               # (default is no password (open server))

#[inet_http_server]         # inet (TCP) server disabled by default
supervisord_ihs_port: 9001
supervisord_ihs_ip: 0.0.0.0
# (ip_address:port specifier, *:port for all iface)
supervisord_ihs_server: "{{supervisord_ihs_ip}}:{{supervisord_ihs_port}}"
supervisord_ihs_username: user            # (default is no username (open server))
supervisord_ihs_password: 123             # (default is no password (open server))

#[supervisord]
supervisord_logfile: /tmp/supervisord.log # (main log file#default $CWD/supervisord.log)
supervisord_logfile_maxbytes: 50MB        # (max main logfile bytes b4 rotation#default 50MB)
supervisord_logfile_backups: 10           # (num of main logfile rotation backups#default 10)
supervisord_loglevel: info                # (log level#default info# others: debug,warn,trace)
supervisord_pidfile: /tmp/supervisord.pid # (supervisord pidfile#default supervisord.pid)
supervisord_nodaemon: false               # (start in foreground if true#default false)
supervisord_minfds: 1024                  # (min. avail startup file descriptors#default 1024)
supervisord_minprocs: 200                 # (min. avail process descriptors#default 200)
supervisord_umask: 022                    # (process file creation umask#default 022)
supervisord_user: chrism                  # (default is current user, required if root)
supervisord_identifier: supervisor        # (supervisord identifier, default is 'supervisor')
supervisord_directory: /tmp               # (default is not to cd during start)
supervisord_nocleanup: true               # (don't clean up tempfiles at start#default false)
supervisord_childlogdir: /tmp             # ('AUTO' child log dir, default $TEMP)
supervisord_environment: KEY="value"      # (key value pairs to add to environment)
supervisord_strip_ansi: false             # (strip ansi escape codes in logs# def. false)

# the below section must remain in the config file for RPC
# (supervisorctl/web interface) to work, additional interfaces may be
# added by defining them in separate rpcinterface: sections
#[rpcinterface:supervisor]
supervisord_rpcinterface_factory: supervisor.rpcinterface:make_main_rpcinterface

#[supervisorctl]
#supervisord_ctl_serverurl: "unix://{{ supervisord_unix_file }}" # use a unix:// URL  for a unix socket
supervisord_ctl_serverurl: "http://127.0.0.1:{{ supervisord_ihs_port }}" # use an http:// url to specify an inet socket
supervisord_ctl_username: chris              # should be same as http_username if set
supervisord_ctl_password: 123                # should be same as http_password if set
supervisord_ctl_prompt: mysupervisor         # cmd line prompt (default "supervisor")
supervisord_ctl_history_file: ~/.sc_history  # use readline history if available

# The below sample program section shows all possible program subsection values,
# create one or more 'real' program: sections to be able to control them under
# supervisor.

#[program:theprogramname]
supervisord_program_configs:  ~
#command=/bin/cat              # the program (relative uses PATH, can take args)
#process_name=%(program_name)s # process_name expr (default %(program_name)s)
#numprocs=1                    # number of processes copies to start (def 1)
#directory=/tmp                # directory to cwd to before exec (def no cwd)
#umask=022                     # umask for process (default None)
#priority=999                  # the relative start priority (default 999)
#autostart=true                # start at supervisord start (default: true)
#autorestart=unexpected        # whether/when to restart (default: unexpected)
#startsecs=1                   # number of secs prog must stay running (def. 1)
#startretries=3                # max # of serial start failures (default 3)
#exitcodes=0,2                 # 'expected' exit codes for process (default 0,2)
#stopsignal=QUIT               # signal used to kill process (default TERM)
#stopwaitsecs=10               # max num secs to wait b4 SIGKILL (default 10)
#stopasgroup=false             # send stop signal to the UNIX process group (default false)
#killasgroup=false             # SIGKILL the UNIX process group (def false)
#user=chrism                   # setuid to this UNIX account to run the program
#redirect_stderr=true          # redirect proc stderr to stdout (default false)
#stdout_logfile=/a/path        # stdout log path, NONE for none# default AUTO
#stdout_logfile_maxbytes=1MB   # max # logfile bytes b4 rotation (default 50MB)
#stdout_logfile_backups=10     # # of stdout logfile backups (default 10)
#stdout_capture_maxbytes=1MB   # number of bytes in 'capturemode' (default 0)
#stdout_events_enabled=false   # emit events on stdout writes (default false)
#stderr_logfile=/a/path        # stderr log path, NONE for none# default AUTO
#stderr_logfile_maxbytes=1MB   # max # logfile bytes b4 rotation (default 50MB)
#stderr_logfile_backups=10     # # of stderr logfile backups (default 10)
#stderr_capture_maxbytes=1MB   # number of bytes in 'capturemode' (default 0)
#stderr_events_enabled=false   # emit events on stderr writes (default false)
#environment=A="1",B="2"       # process environment additions (def no adds)
#serverurl=AUTO                # override serverurl computation (childutils)

# The below sample eventlistener section shows all possible
# eventlistener subsection values, create one or more 'real'
# eventlistener: sections to be able to handle event notifications
# sent by supervisor.

#[eventlistener:theeventlistenername]
#command=/bin/eventlistener    # the program (relative uses PATH, can take args)
#process_name=%(program_name)s # process_name expr (default %(program_name)s)
#numprocs=1                    # number of processes copies to start (def 1)
#events=EVENT                  # event notif. types to subscribe to (req'd)
#buffer_size=10                # event buffer queue size (default 10)
#directory=/tmp                # directory to cwd to before exec (def no cwd)
#umask=022                     # umask for process (default None)
#priority=-1                   # the relative start priority (default -1)
#autostart=true                # start at supervisord start (default: true)
#autorestart=unexpected        # whether/when to restart (default: unexpected)
#startsecs=1                   # number of secs prog must stay running (def. 1)
#startretries=3                # max # of serial start failures (default 3)
#exitcodes=0,2                 # 'expected' exit codes for process (default 0,2)
#stopsignal=QUIT               # signal used to kill process (default TERM)
#stopwaitsecs=10               # max num secs to wait b4 SIGKILL (default 10)
#stopasgroup=false             # send stop signal to the UNIX process group (default false)
#killasgroup=false             # SIGKILL the UNIX process group (def false)
#user=chrism                   # setuid to this UNIX account to run the program
#redirect_stderr=true          # redirect proc stderr to stdout (default false)
#stdout_logfile=/a/path        # stdout log path, NONE for none# default AUTO
#stdout_logfile_maxbytes=1MB   # max # logfile bytes b4 rotation (default 50MB)
#stdout_logfile_backups=10     # # of stdout logfile backups (default 10)
#stdout_events_enabled=false   # emit events on stdout writes (default false)
#stderr_logfile=/a/path        # stderr log path, NONE for none# default AUTO
#stderr_logfile_maxbytes=1MB   # max # logfile bytes b4 rotation (default 50MB)
#stderr_logfile_backups        # # of stderr logfile backups (default 10)
#stderr_events_enabled=false   # emit events on stderr writes (default false)
#environment=A="1",B="2"       # process environment additions
#serverurl=AUTO                # override serverurl computation (childutils)

# The below sample group section shows all possible group values,
# create one or more 'real' group: sections to create "heterogeneous"
# process groups.

#[group:thegroupname]
#programs=progname1,progname2  # each refers to 'x' in [program:x] definitions
#priority=999                  # the relative start priority (default 999)

# The [include] section can just contain the "files" setting.  This
# setting can list multiple files (separated by whitespace or
# newlines).  It can also contain wildcards.  The filenames are
# interpreted as relative to this file.  Included files *cannot*
# include files themselves.

#[include]
supervisord_include_files:
  - /etc/supervisord.d/*.conf

supervisor_directories:
  - "{{ supervisord_conf_file | expanduser | dirname }}"
  - "{{ supervisord_conf_program_dir | expanduser }}"
  - "{{ supervisord_init_file | expanduser | dirname }}"
  - "{{ supervisord_unix_file | expanduser | dirname }}"
  - "{{ supervisord_logfile | expanduser | dirname }}"
  - "{{ supervisord_pidfile | expanduser | dirname }}"
  - "{{ supervisord_directory | expanduser }}"
  - "{{ supervisord_childlogdir | expanduser }}"
#  - "{{ supervisord_ctl_history_file | dirname }}"
